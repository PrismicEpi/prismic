name: Deploy to Staging

on:
  push:
    branches:
      - staging
  pull_request:
    types:
      - closed
    branches:
      - staging

jobs:
  deploy-back:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    environment: staging
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Create .env for backend
        run: |
          echo "BACKEND_API_KEY=${{ secrets.BACKEND_API_KEY }}" > /tmp/backend.env # Create a temporary file
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> /tmp/backend.env # Append more secrets
          echo "CERT_RESOLVER=${{ secrets.CERT_RESOLVER }}" >> /tmp/backend.env # Append more secrets
          echo "TRAEFIK_NETWORK=${{ secrets.TRAEFIK_NETWORK }}" >> /tmp/backend.env # Append more secrets
          echo "APEX_DOMAIN=${{ secrets.APEX_DOMAIN }}" >> /tmp/backend.env # Append more secrets
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> /tmp/backend.env # Append more secrets
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> /tmp/backend.env # Append more secrets
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> /tmp/backend.env # Append more secrets
          echo "NC_DB_HOST=${{ secrets.NC_DB_HOST }}" >> /tmp/backend.env # Append more secrets
          echo "NC_ADMIN_EMAIL=${{ secrets.NC_ADMIN_EMAIL }}" >> /tmp/backend.env # Append more secrets
          echo "NC_ADMIN_PASSWORD=${{ secrets.NC_ADMIN_PASSWORD }}" >> /tmp/backend.env # Append more secrets
          echo "NC_DISABLE_CACHE=${{ secrets.NC_DISABLE_CACHE }}" >> /tmp/backend.env # Append more secrets
          
      - name: Deploy Backend to Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p /opt/prismic-staging/back/docker"
          scp /tmp/backend.env ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/prismic-staging/back/docker/.env #copy the file and rename it to .env

  deploy-front:
      # similar steps as deploy-back, but creates and deploys the front .env file
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    environment: staging
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Create .env for front
        run: |
          echo "API_URL=${{ secrets.API_URL }}" > /tmp/front.env # Create a temporary file
          echo "FRONT_URL=${{ secrets.FRONT_URL }}" >> /tmp/front.env # Append more secrets

      - name: Deploy Front to Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p /opt/prismic-staging/front/docker"
          scp /tmp/front.env ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/prismic-staging/front/docker/.env #copy the file and rename it to .env